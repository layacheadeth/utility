

public class function {
    public static void questionOne(){
        int [] ar=new int[20];
        int highest = ar[0],secondHighest = ar[0],highestIndex = 0;
        for(int i=0;i<ar.length;i++){
            if(ar[i] > highest){
                highest = ar[i];
                highestIndex = i;
            }
        }
        for(int i=0;i<ar.length;i++){
            if(ar[i] > secondHighest && ar[i] < highest){
                secondHighest = ar[i];
            }
        }
        int[] newArray = new int[ar.length+1];
        boolean reached = false;
        for(int i=0;i<newArray.length;i++){
            if(reached){
                newArray[i] = ar[i-1];
            }else if(i == highestIndex){
                newArray[i] = secondHighest;
                i++;
                newArray[i] = highest-secondHighest;
                reached = true;
            }else{
                newArray[i] = ar[i];
            }
        }

    }
    public static void questionTwo(int rotation){
        int [] ar=new int[20];
        int[] newArray = new int[ar.length];
        int rotate = rotation % ar.length;
        for(int i=0;i<ar.length;i++){
            if(i < rotate){
                newArray[i] = ar[ar.length-1-(rotate-(i+1))];
            }else{
                newArray[i] = ar[i-rotate];
            }
        }

    }
    public static void questionThree(){
        int[][] ar=new int [20][30];
        boolean isSymetric = true;
        for(int i=0;i<ar.length;i++){
            for(int j=0;j<ar[i].length;j++){
                if (ar[j][i] != ar[i][j]) {
                    isSymetric = false;
                    break;
                }
            }
        }
        System.out.println(isSymetric ? "Matrix is symetric" : "Matrix is not symetric");
    }
    public static void questionFour(int n){
        int[][] magicSquare = new int[n][n];

        int i = n/2;
        int j = n-1;

        for (int num=1; num <= n*n; )
        {
            if (i==-1 && j==n)
            {
                j = n-2;
                i = 0;
            }
            else
            {

                if (j == n) j = 0;


                if (i < 0) i=n-1;
            }

            if (magicSquare[i][j] != 0)
            {
                j -= 2;
                i++;
                continue;
            }
            else magicSquare[i][j] = num++;

            j++;  i--;
        }
        displayMagicSquare(n,magicSquare);
    }

    private static void displayMagicSquare(int n,int[][] magicSquare){
        System.out.println("The Magic Square for "+n+":");
        for(int[] i:magicSquare)
        {
            for(int j:i){
                System.out.print(j + " ");
            }
            System.out.println();
        }
    }
}
